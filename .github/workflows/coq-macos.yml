name: CI (Coq, MacOS)

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build:

    runs-on: macOS-10.15

    env:
      NJOBS: "2"
      COQ_VERSION: "master"

    # initial steps copied from https://github.com/coq/coq/blob/97e2c757b6deaeaca0a73a4cfbcbc64d13205b1e/.github/workflows/ci.yml#L29-L78
    steps:
    - name: Install system dependencies
      run: |
        set -e
        brew tap discoteq/discoteq
        brew install gnu-time opam gtksourceview3 adwaita-icon-theme flock
        pip3 install macpack

    - name: Install OCaml dependencies
      run: |
        set -e
        export PKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig
        opam init -a -j "$NJOBS" --compiler=ocaml-base-compiler.$COMPILER
        opam switch set ocaml-base-compiler.$COMPILER
        eval $(opam env)
        opam update
        opam install -j "$NJOBS" num ocamlfind${FINDLIB_VER} ounit lablgtk3-sourceview3 zarith.1.10 dune.2.8.5
        opam list
      env:
        COMPILER: "4.11.1"
        FINDLIB_VER: ".1.8.1"
        OPAMYES: "true"

    - name: Build Coq
      run: |
        set -e
        git clone https://github.com/coq/coq.git --branch=${COQ_VERSION}
        eval $(opam env)
        (cd coq && git log -1)
        (cd coq && ./configure -prefix /usr/local/ -warn-error yes -native-compiler no -coqide opt)
        (cd coq && make -j "$NJOBS" && dune build coq-core.install)

    - run: find /usr/local

    - name: Install Coq
      run: |
        eval $(opam env)
        (cd coq && sudo make install)

    - name: echo build params
      run: |
        eval $(opam env)
        echo "::group::sysctl -n machdep.cpu.brand_string"
        sysctl -n machdep.cpu.brand_string
        echo "::endgroup::"
        echo "::group::sysctl -a | grep machdep.cpu"
        sysctl -a | grep machdep.cpu
        echo "::endgroup::"
        echo "::group::uname -a"
        uname -a
        echo "::endgroup::"
        echo "::group::sw_vers -productVersion"
        sw_vers -productVersion
        echo "::endgroup::"
        echo "::group::system_profiler SPSoftwareDataType"
        system_profiler SPSoftwareDataType
        echo "::endgroup::"
        echo "::group::ocamlc -config"
        ocamlc -config
        echo "::endgroup::"
        echo "::group::coqc --config"
        coqc --config
        echo "::endgroup::"
        echo "::group::coqc --version"
        coqc --version
        echo "::endgroup::"
        echo "::group::echo | coqtop"
        echo | coqtop
        echo "::endgroup::"
    - uses: actions/checkout@v2
    - name: submodules-init
      uses: snickerbockers/submodules-init@v4
    - name: deps
      run: |
        eval $(opam env)
        etc/ci/github-actions-make.sh -j2 deps
    - name: all
      run: |
        eval $(opam env)
        etc/ci/github-actions-make.sh -j2 all
    - name: upload OCaml files
      uses: actions/upload-artifact@v1
      with:
        name: ExtractionOCaml
        path: src/ExtractionOCaml
    - name: display timing info
      run: cat time-of-build-pretty.log
    - name: display per-line timing info
      run: etc/ci/github-actions-display-per-line-timing.sh
#    - name: upload timing and .vo info
#      uses: actions/upload-artifact@v1
#      with:
#        name: build-outputs
#        path: .
#      if: always ()
    - name: validate
      run: make TIMED=1 validate COQCHKFLAGS="-o"
      if: github.event_name != 'pull_request'
